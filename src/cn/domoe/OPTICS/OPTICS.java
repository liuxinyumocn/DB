package cn.domoe.OPTICS;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;

public class OPTICS {

	private Queue<double[]> result = new LinkedList<>();
	private Queue<double[]> order = new LinkedList<>();
	
	private double[][] data = null;
	
	private double s = 10;
	private int MinPts = 70;
	
	public OPTICS(double[][] data){
		this.data = data;
		
		//打印原数据
//		for(int i = 0;i<data.length;i++) {
//			System.out.println(data[i][0]+" , "+data[i][1]);
//		}
//		
		this.print(data,0,2);
		
		for(int i = 0;i<data.length;i++) {
			//判断是否在结果队列中
			double[][] result = queueToArrayUnclear(this.result);
			boolean c = false;
			for(int j = 0;j<result.length;j++) {
				if(result[j][0] == data[i][0] && result[j][1] == data[i][1])
				{
					c = true;
					break;
				}
			}
			if(c)
				continue;
			
			if(this.isCore(data[i], s, MinPts)) {
				this.pushResult(data[i]);
				//寻找基于该点的所有密度直达点集合
				List<double[]> list = this.getPoint(data[i], s);
				//将所有点放入Order队列中
				this.pushOrder(list);
				this.shiftOrder();
			}
		}
		
		//打印Result
		double[][] result = queueToArray(this.result);
//		for(int i =0;i<result.length;i++) {
//			System.out.println(result[i][0] + " , " + result[i][1] + " || "+result[i][2] + " | "+result[i][3]);
//		}
		this.print(result,2,4);
	}
	
	private void print(double[][] list,int s ,int e) {
		System.out.println("-------------------");
		for(int i = s;i<e;i++) {
			System.out.println("第"+i+"列：");
			for(int j=0;j<list.length;j++) {
				System.out.println(list[j][i]);
			}
		}
		
	}
	
	//将队列打印成数组，且不影响队列
	private double[][] queueToArrayUnclear(Queue<double[]> queue){
		double[][] list = new double[queue.size()][];
		int index = 0;
		while(true) {
			double[] i = queue.poll();
			if(i != null) {
				list[index++] = i;
			}else {
				break;
			}
		}
		for(int i = 0;i<list.length;i++) {
			queue.add(list[i]);
		}
		return list;
	}
	
	//将队列打印成数组，原队列不可用
	private double[][] queueToArray(Queue<double[]> queue) {
		double[][] list = new double[queue.size()][];
		int index = 0;
		while(true) {
			double[] i = queue.poll();
			if(i != null) {
				list[index++] = i;
			}else {
				break;
			}
		}
		return list;
	}
	
	//从序列集合中取出新的点
	private void shiftOrder() {
		double[] p = order.poll();
		if(p == null)
			return;
		if(this.isCore(p, s, MinPts)) {
			pushResult(p);
			List<double[]> list = getPoint(p,s);
			pushOrder(list);
		}
		shiftOrder();
	}
	
	private boolean isCore(double[] p,double s,int MinPts){
		int num = 0;
		for(int i =0;i< this.data.length;i++){
			double dis = this.dis(p, this.data[i]);
			if(dis <= s){
				num++;
				if(num >= MinPts){
					p[3] = dis;
					return true;
				}
			}
		}
		return false;
	}
	
	private double dis(double[] a ,double[] b){
		double a2 = a[0]-b[0];
		double b2 = a[1]-b[1];
		return Math.sqrt(a2*a2 + b2*b2);
	}
	
	private List<double[]> getPoint(double[] p,double s){
		List<double[]> list = new ArrayList<>();
		for(int i = 0;i<this.data.length;i++){
			double[] q = this.data[i];
			double dis = this.dis(q, p);
			if(dis <= s && q != p){
				q[2] = dis;
				if(q[2] < p[3])
					q[2] = p[3];
				list.add(q);
			}
		}
		return list;
	}
	
	//放入Order中并重新排序 放入的点不能已经存在于Result中 也不能已经存在于Order中
	private void pushOrder(List<double[]> list){

		double[][] order = this.queueToArrayUnclear(this.order);
		double[][] result = this.queueToArrayUnclear(this.result);
		
		for(int i = 0;i<list.size();i++){
			boolean c = false;
			double[] item = list.get(i);
			for(int j =0;j<result.length;j++) {
				if(result[j] == item) {
					c = true;
					break;
				}
			}
			if(c)
				continue;
			for(int j =0;j<order.length;j++){
				if(order[j] == item){
					c = true;
					if(order[j][2] > item[2])
						order[j][2] = item[2];
					break;
				}
			}
			if(!c) 
				this.order.add(item);			
		}
		//重新排序
		order =  this.queueToArray(this.order);
		for(int i = 0;i<order.length;i++) {
			for(int j = i+1;j<order.length;j++) {
				if(order[i][2] > order[j][2]) {
					double[] a = order[i];
					order[i] = order[j];
					order[j] = a;
				}		
			}
		}
		//放回queue
		for(int i = 0;i<order.length;i++) {
			this.order.add(order[i]);
		}
	}
	
	//去重复加入Result
	private void pushResult(double[] p) {
		double[][] data = this.queueToArrayUnclear(this.result);
		for(int i =0;i<data.length;i++) {
			if(data[i] == p) {
				return;
			}
		}
		this.result.add(p);
	}
	
	public static void main(String[] args) {
//		double[][] data = new double[50][];
//		for(int i = 0;i<data.length;i++){
//			int a = (int)(Math.random() * 20);
//			int b = (int)(Math.random() * 20);
//			data[i] = new double[]{a,b,9999,9999};
//		}
//		
		double[][] data2 = new double[][] {
			{26,24,9999,9999},
			{25,24,9999,9999},
			{24,24,9999,9999},
			{23,25,9999,9999},
			{22,25,9999,9999},
			{22,24,9999,9999},
			{22,23,9999,9999},
			{22,22,9999,9999},
			{21,21,9999,9999},
			{21,20,9999,9999},
			{21,19,9999,9999},
			{22,18,9999,9999},
			{23,18,9999,9999},
			{24,18,9999,9999},
			{25,17,9999,9999},
			{26,17,9999,9999},
			{27,17,9999,9999},
			{28,17,9999,9999},
			{29,17,9999,9999},
			{30,17,9999,9999},
			{31,17,9999,9999},
			{32,18,9999,9999},
			{33,18,9999,9999},
			{34,19,9999,9999},
			{34,20,9999,9999},
			{35,21,9999,9999},
			{35,22,9999,9999},
			{35,23,9999,9999},
			{35,24,9999,9999},
			{35,25,9999,9999},
			{35,26,9999,9999},
			{35,27,9999,9999},
			{35,28,9999,9999},
			{35,29,9999,9999},
			{33,30,9999,9999},
			{34,29,9999,9999},
			{31,30,9999,9999},
			{32,30,9999,9999},
			{30,30,9999,9999},
			{29,30,9999,9999},
			{28,30,9999,9999},
			{27,31,9999,9999},
			{28,31,9999,9999},
			{28,32,9999,9999},
			{27,33,9999,9999},
			{23,33,9999,9999},
			{24,33,9999,9999},
			{25,33,9999,9999},
			{26,33,9999,9999},
			{19,33,9999,9999},
			{20,33,9999,9999},
			{21,33,9999,9999},
			{22,33,9999,9999},
			{15,32,9999,9999},
			{16,32,9999,9999},
			{17,33,9999,9999},
			{18,33,9999,9999},
			{13,31,9999,9999},
			{14,31,9999,9999},
			{12,30,9999,9999},
			{11,30,9999,9999},
			{11,29,9999,9999},
			{12,28,9999,9999},
			{13,27,9999,9999},
			{14,26,9999,9999},
			{15,25,9999,9999},
			{16,24,9999,9999},
			{17,24,9999,9999},
			{18,23,9999,9999},
			{19,23,9999,9999},
			{20,23,9999,9999},
			{21,23,9999,9999},
			{23,22,9999,9999},
			{24,22,9999,9999},
			{25,22,9999,9999},
			{25,23,9999,9999},
			{25,25,9999,9999},
			{25,26,9999,9999},
			{25,27,9999,9999},
			{25,28,9999,9999},
			{25,29,9999,9999},
			{25,30,9999,9999},
			{24,30,9999,9999},
			{23,30,9999,9999},
			{23,29,9999,9999},
			{23,27,9999,9999},
			{23,28,9999,9999},
			{23,26,9999,9999},
			{24,23,9999,9999},
			{24,20,9999,9999},
			{24,21,9999,9999},
			{25,18,9999,9999},
			{25,19,9999,9999},
			{26,15,9999,9999},
			{26,16,9999,9999},
			{27,13,9999,9999},
			{27,14,9999,9999},
			{28,11,9999,9999},
			{28,12,9999,9999},
			{29,11,9999,9999},
			{29,12,9999,9999},
			{29,13,9999,9999},
			{28,14,9999,9999},
			{28,15,9999,9999},
			{28,16,9999,9999},
			{27,18,9999,9999},
			{26,19,9999,9999},
			{26,20,9999,9999},
			{26,21,9999,9999},
			{26,22,9999,9999},
			{26,23,9999,9999},
			{24,27,9999,9999},
			{24,28,9999,9999},
			{22,30,9999,9999},
			{22,31,9999,9999},
			{21,31,9999,9999},
			{20,31,9999,9999},
			{20,30,9999,9999},
			{20,29,9999,9999},
			{20,28,9999,9999},
			{20,26,9999,9999},
			{20,27,9999,9999},
			{20,25,9999,9999},
			{20,24,9999,9999},
			{20,20,9999,9999},
			{20,21,9999,9999},
			{20,22,9999,9999},
			{21,18,9999,9999},
			{26,18,9999,9999},
			{27,19,9999,9999},
			{27,20,9999,9999},
			{27,21,9999,9999},
			{27,22,9999,9999},
			{27,23,9999,9999},
			{27,24,9999,9999},
			{27,25,9999,9999},
			{27,26,9999,9999},
			{27,27,9999,9999},
			{27,28,9999,9999},
			{27,29,9999,9999},
			{27,30,9999,9999},
			{26,30,9999,9999},
			{19,28,9999,9999},
			{21,29,9999,9999},
			{18,28,9999,9999},
			{16,27,9999,9999},
			{17,27,9999,9999},
			{14,25,9999,9999},
			{15,26,9999,9999},
			{14,24,9999,9999},
			{13,21,9999,9999},
			{13,22,9999,9999},
			{13,23,9999,9999},
			{13,20,9999,9999},
			{13,19,9999,9999},
			{13,18,9999,9999},
			{14,17,9999,9999},
			{15,16,9999,9999},
			{16,16,9999,9999},
			{17,16,9999,9999},
			{18,15,9999,9999},
			{19,14,9999,9999},
			{20,14,9999,9999},
			{21,14,9999,9999},
			{22,14,9999,9999},
			{22,15,9999,9999},
			{21,15,9999,9999},
			{21,16,9999,9999},
			{20,16,9999,9999},
			{19,16,9999,9999},
			{18,16,9999,9999},
			{14,16,9999,9999},
			{41,18,9999,9999},
			{41,19,9999,9999},
			{41,20,9999,9999},
			{40,21,9999,9999},
			{40,22,9999,9999},
			{38,24,9999,9999},
			{38,25,9999,9999},
			{37,26,9999,9999},
			{36,27,9999,9999},
			{33,29,9999,9999},
			{34,28,9999,9999},
			{31,29,9999,9999},
			{32,29,9999,9999},
			{26,31,9999,9999},
			{23,32,9999,9999},
			{24,31,9999,9999},
			{25,31,9999,9999},
			{20,32,9999,9999},
			{21,32,9999,9999},
			{22,32,9999,9999},
			{19,32,9999,9999},
			{16,33,9999,9999},
			{15,33,9999,9999},
			{14,33,9999,9999},
			{14,32,9999,9999},
			{14,30,9999,9999},
			{14,29,9999,9999},
			{14,27,9999,9999},
			{14,28,9999,9999},
			{16,22,9999,9999},
			{17,21,9999,9999},
			{18,21,9999,9999},
			{19,20,9999,9999},
			{22,19,9999,9999},
			{32,17,9999,9999},
			{33,17,9999,9999},
			{34,17,9999,9999},
			{35,17,9999,9999},
			{36,18,9999,9999},
			{37,18,9999,9999},
			{38,18,9999,9999},
			{39,19,9999,9999},
			{39,20,9999,9999},
			{39,21,9999,9999},
			{39,22,9999,9999},
			{39,23,9999,9999},
			{39,24,9999,9999},
			{39,25,9999,9999},
			{39,26,9999,9999},
			{38,27,9999,9999},
			{37,28,9999,9999},
			{36,28,9999,9999},
			{29,29,9999,9999},
			{30,29,9999,9999},
			{28,29,9999,9999},
			{26,29,9999,9999},
			{24,29,9999,9999},
			{23,23,9999,9999},
			{23,24,9999,9999},
			{23,21,9999,9999},
			{24,19,9999,9999},
			{28,25,9999,9999},
			{29,24,9999,9999},
			{29,23,9999,9999},
			{30,21,9999,9999},
			{30,22,9999,9999},
			{31,19,9999,9999},
			{31,20,9999,9999},
			{33,19,9999,9999},
			{33,20,9999,9999},
			{33,21,9999,9999},
			{33,22,9999,9999},
			{33,23,9999,9999},
			{33,24,9999,9999},
			{32,25,9999,9999},
			{32,26,9999,9999},
			{32,27,9999,9999},
			{31,27,9999,9999},
			{31,28,9999,9999},
			{31,26,9999,9999},
			{31,25,9999,9999},
			{31,24,9999,9999},
			{32,22,9999,9999},
			{32,23,9999,9999},
			{34,21,9999,9999},
			{34,22,9999,9999},
			{34,23,9999,9999},
			{34,24,9999,9999},
			{34,25,9999,9999},
			{34,26,9999,9999},
			{34,27,9999,9999},
			{31,36,9999,9999},
			{30,36,9999,9999},
			{29,36,9999,9999},
			{28,36,9999,9999},
			{27,36,9999,9999},
			{27,35,9999,9999},
			{28,34,9999,9999},
			{29,33,9999,9999},
			{30,32,9999,9999},
			{31,31,9999,9999},
			{32,31,9999,9999},
			{33,28,9999,9999},
			{30,28,9999,9999},
			{32,28,9999,9999},
			{28,28,9999,9999},
			{29,28,9999,9999},
			{26,28,9999,9999},
			{28,33,9999,9999},
			{29,34,9999,9999},
			{29,35,9999,9999},
			{30,37,9999,9999},
			{30,38,9999,9999},
			{31,38,9999,9999},
			{32,37,9999,9999},
			{33,36,9999,9999},
			{33,35,9999,9999},
			{33,34,9999,9999},
			{33,33,9999,9999},
			{33,32,9999,9999},
			{33,31,9999,9999},
			{29,25,9999,9999},
			{30,26,9999,9999},
			{21,22,9999,9999},
			{19,21,9999,9999},
			{15,21,9999,9999},
			{16,21,9999,9999},
			{14,20,9999,9999},
			{12,20,9999,9999},
			{15,20,9999,9999},
			{16,20,9999,9999},
			{17,20,9999,9999},
			{18,20,9999,9999},
			{22,20,9999,9999},
			{23,20,9999,9999},
			{25,20,9999,9999},
			{22,21,9999,9999},
			{19,22,9999,9999},
			{18,22,9999,9999},
			{17,22,9999,9999},
			{15,22,9999,9999},
			{15,23,9999,9999},
			{45,76,9999,9999},
			{44,76,9999,9999},
			{44,77,9999,9999},
			{43,75,9999,9999},
			{43,76,9999,9999},
			{43,77,9999,9999},
			{43,71,9999,9999},
			{43,72,9999,9999},
			{43,73,9999,9999},
			{43,74,9999,9999},
			{43,68,9999,9999},
			{43,69,9999,9999},
			{43,70,9999,9999},
			{43,66,9999,9999},
			{43,67,9999,9999},
			{43,63,9999,9999},
			{43,64,9999,9999},
			{43,65,9999,9999},
			{44,63,9999,9999},
			{45,62,9999,9999},
			{46,61,9999,9999},
			{47,61,9999,9999},
			{48,61,9999,9999},
			{48,62,9999,9999},
			{48,63,9999,9999},
			{48,64,9999,9999},
			{49,65,9999,9999},
			{49,66,9999,9999},
			{49,67,9999,9999},
			{49,68,9999,9999},
			{49,69,9999,9999},
			{49,70,9999,9999},
			{50,71,9999,9999},
			{50,72,9999,9999},
			{50,73,9999,9999},
			{50,74,9999,9999},
			{50,75,9999,9999},
			{50,76,9999,9999},
			{50,77,9999,9999},
			{50,78,9999,9999},
			{50,79,9999,9999},
			{50,80,9999,9999},
			{49,80,9999,9999},
			{48,80,9999,9999},
			{47,75,9999,9999},
			{47,76,9999,9999},
			{47,77,9999,9999},
			{47,78,9999,9999},
			{47,79,9999,9999},
			{47,73,9999,9999},
			{47,74,9999,9999},
			{48,72,9999,9999},
			{49,71,9999,9999},
			{51,71,9999,9999},
			{51,72,9999,9999},
			{51,73,9999,9999},
			{51,74,9999,9999},
			{51,75,9999,9999},
			{49,76,9999,9999},
			{48,76,9999,9999},
			{46,76,9999,9999},
			{44,68,9999,9999},
			{44,69,9999,9999},
			{45,67,9999,9999},
			{46,66,9999,9999},
			{47,65,9999,9999},
			{48,65,9999,9999},
			{50,65,9999,9999},
			{51,65,9999,9999},
			{52,65,9999,9999},
			{53,65,9999,9999},
			{54,65,9999,9999},
			{55,65,9999,9999},
			{55,66,9999,9999},
			{55,67,9999,9999},
			{55,68,9999,9999},
			{55,69,9999,9999},
			{55,70,9999,9999},
			{54,71,9999,9999},
			{54,72,9999,9999},
			{52,74,9999,9999},
			{53,73,9999,9999},
			{46,75,9999,9999},
			{48,74,9999,9999},
			{49,74,9999,9999},
			{42,75,9999,9999},
			{44,75,9999,9999},
			{45,75,9999,9999},
			{38,75,9999,9999},
			{39,75,9999,9999},
			{40,75,9999,9999},
			{41,75,9999,9999},
			{35,75,9999,9999},
			{36,75,9999,9999},
			{37,75,9999,9999},
			{34,75,9999,9999},
			{33,75,9999,9999},
			{32,75,9999,9999},
			{31,74,9999,9999},
			{31,73,9999,9999},
			{31,72,9999,9999},
			{32,71,9999,9999},
			{32,70,9999,9999},
			{33,70,9999,9999},
			{34,70,9999,9999},
			{35,69,9999,9999},
			{36,69,9999,9999},
			{37,69,9999,9999},
			{38,69,9999,9999},
			{39,69,9999,9999},
			{40,68,9999,9999},
			{41,68,9999,9999},
			{42,68,9999,9999},
			{45,68,9999,9999},
			{46,68,9999,9999},
			{47,68,9999,9999},
			{48,68,9999,9999},
			{50,68,9999,9999},
			{51,68,9999,9999},
			{52,68,9999,9999},
			{53,69,9999,9999},
			{54,69,9999,9999},
			{54,70,9999,9999},
			{54,73,9999,9999},
			{54,74,9999,9999},
			{54,75,9999,9999},
			{54,76,9999,9999},
			{54,77,9999,9999},
			{53,78,9999,9999},
			{53,79,9999,9999},
			{51,81,9999,9999},
			{52,80,9999,9999},
			{49,83,9999,9999},
			{50,82,9999,9999},
			{47,83,9999,9999},
			{48,83,9999,9999},
			{44,83,9999,9999},
			{45,83,9999,9999},
			{46,83,9999,9999},
			{42,83,9999,9999},
			{43,83,9999,9999},
			{39,83,9999,9999},
			{40,83,9999,9999},
			{41,83,9999,9999},
			{37,83,9999,9999},
			{38,83,9999,9999},
			{34,81,9999,9999},
			{35,81,9999,9999},
			{36,82,9999,9999},
			{33,80,9999,9999},
			{32,77,9999,9999},
			{32,78,9999,9999},
			{32,79,9999,9999},
			{32,74,9999,9999},
			{32,76,9999,9999},
			{32,72,9999,9999},
			{32,73,9999,9999},
			{32,68,9999,9999},
			{32,69,9999,9999},
			{32,66,9999,9999},
			{32,67,9999,9999},
			{32,65,9999,9999},
			{34,64,9999,9999},
			{35,63,9999,9999},
			{36,62,9999,9999},
			{37,62,9999,9999},
			{38,62,9999,9999},
			{38,63,9999,9999},
			{39,64,9999,9999},
			{39,65,9999,9999},
			{39,66,9999,9999},
			{39,67,9999,9999},
			{39,68,9999,9999},
			{40,69,9999,9999},
			{40,70,9999,9999},
			{40,71,9999,9999},
			{40,72,9999,9999},
			{40,73,9999,9999},
			{40,74,9999,9999},
			{45,71,9999,9999},
			{42,74,9999,9999},
			{41,76,9999,9999},
			{40,76,9999,9999},
			{40,77,9999,9999},
			{40,78,9999,9999},
			{40,79,9999,9999},
			{39,80,9999,9999},
			{39,81,9999,9999},
			{39,82,9999,9999},
			{38,84,9999,9999},
			{38,85,9999,9999},
			{38,86,9999,9999},
			{37,87,9999,9999},
			{37,88,9999,9999},
			{37,89,9999,9999},
			{37,90,9999,9999},
			{37,91,9999,9999},
			{36,91,9999,9999},
			{36,92,9999,9999},
			{38,87,9999,9999},
			{41,77,9999,9999},
			{44,72,9999,9999},
			{44,73,9999,9999},
			{44,74,9999,9999},
			{42,76,9999,9999},
			{38,74,9999,9999},
			{37,73,9999,9999},
			{36,72,9999,9999},
			{36,73,9999,9999},
			{36,71,9999,9999},
			{36,70,9999,9999},
			{41,69,9999,9999},
			{42,69,9999,9999},
			{44,70,9999,9999},
			{45,70,9999,9999},
			{46,72,9999,9999},
			{46,73,9999,9999},
			{46,74,9999,9999},
			{48,77,9999,9999},
			{48,78,9999,9999},
			{49,78,9999,9999},
			{48,79,9999,9999},
			{60,83,9999,9999},
			{60,84,9999,9999},
			{60,85,9999,9999},
			{58,85,9999,9999},
			{59,85,9999,9999},
			{56,84,9999,9999},
			{57,85,9999,9999},
			{54,83,9999,9999},
			{55,83,9999,9999},
			{52,82,9999,9999},
			{53,82,9999,9999},
			{50,81,9999,9999},
			{46,78,9999,9999},
			{45,77,9999,9999},
			{45,78,9999,9999},
			{46,77,9999,9999},
			{48,81,9999,9999},
			{48,82,9999,9999},
			{55,63,9999,9999},
			{70,17,9999,9999},
			{67,18,9999,9999},
			{67,19,9999,9999},
			{67,20,9999,9999},
			{67,21,9999,9999},
			{67,22,9999,9999},
			{67,23,9999,9999},
			{67,24,9999,9999},
			{73,24,9999,9999},
			{71,17,9999,9999},
			{59,26,9999,9999},
			{54,44,9999,9999},
			{53,44,9999,9999},
			{53,45,9999,9999},
			{52,46,9999,9999},
			{31,53,9999,9999},
			{10,60,9999,9999},
			{12,54,9999,9999},
			{16,72,9999,9999},
			{16,73,9999,9999},
			{16,74,9999,9999},
			{16,75,9999,9999},
			{16,76,9999,9999},
			{17,89,9999,9999},
			{16,89,9999,9999},
			{16,90,9999,9999},
			{61,105,9999,9999},
			{62,105,9999,9999},
			{63,105,9999,9999},
			{81,77,9999,9999},
			{80,77,9999,9999},
			{80,76,9999,9999},
			{80,75,9999,9999},
			{80,74,9999,9999},
			{80,73,9999,9999},
			{80,72,9999,9999},
			{80,71,9999,9999},
			{80,67,9999,9999},
			{80,68,9999,9999},
			{80,69,9999,9999},
			{80,70,9999,9999},
			{80,66,9999,9999},
			{80,65,9999,9999},
			{80,64,9999,9999},
			{80,63,9999,9999},
			{79,62,9999,9999},
			{79,61,9999,9999},
			{79,60,9999,9999},
			{79,59,9999,9999},
			{78,59,9999,9999},
			{77,59,9999,9999},
			{76,59,9999,9999},
			{75,59,9999,9999},
			{74,59,9999,9999},
			{73,49,9999,9999},
			{72,49,9999,9999},
			{71,49,9999,9999},
			{70,49,9999,9999},
			{69,49,9999,9999},
			{70,40,9999,9999},
			{55,-2,9999,9999},
			{55,-3,9999,9999},
			{46,-12,9999,9999},
			{46,-11,9999,9999},
			{46,-10,9999,9999},
			{46,-9,9999,9999},
			{46,-8,9999,9999},
			{40,-4,9999,9999},
			{40,-3,9999,9999},
			{39,-3,9999,9999},
			{39,-2,9999,9999},
			{22,-12,9999,9999},
			{22,-11,9999,9999},
			{21,-11,9999,9999},
			{21,-10,9999,9999},
			{13,-7,9999,9999},
			{13,-6,9999,9999},
			{12,-6,9999,9999},
			{12,-4,9999,9999},
			{12,-3,9999,9999},
			{11,0,9999,9999},
			{19,0,9999,9999},
			{20,0,9999,9999},
			{21,1,9999,9999},
			{22,1,9999,9999},
			{23,1,9999,9999},
			{24,1,9999,9999},
			{25,2,9999,9999},
			{26,2,9999,9999},
			{27,2,9999,9999},
			{28,2,9999,9999},
			{29,2,9999,9999},
			{30,2,9999,9999},
			{31,2,9999,9999},
			{47,5,9999,9999},
			{47,6,9999,9999},
			{63,13,9999,9999},
			{63,14,9999,9999},
			{46,27,9999,9999},
			{46,28,9999,9999},
			{46,29,9999,9999},
			{46,30,9999,9999},
			{26,45,9999,9999},
			{25,45,9999,9999},
			{24,45,9999,9999},
			{22,46,9999,9999},
			{23,46,9999,9999},
			{21,46,9999,9999},
			{21,47,9999,9999},
			{20,47,9999,9999},
			{14,51,9999,9999},
			{13,51,9999,9999},
			{13,52,9999,9999},
			{12,53,9999,9999},
			{11,55,9999,9999},
			{11,56,9999,9999},
			{5,72,9999,9999},
			{6,72,9999,9999},
			{7,72,9999,9999},
			{24,63,9999,9999},
			{24,64,9999,9999},
			{24,65,9999,9999},
			{24,66,9999,9999},
			{58,41,9999,9999},
			{74,35,9999,9999},
			{82,17,9999,9999},
			{82,16,9999,9999},
			{82,15,9999,9999},
			{82,13,9999,9999},
			{82,14,9999,9999},
			{82,12,9999,9999},
			{82,4,9999,9999},
			{81,3,9999,9999},
			{81,4,9999,9999},
			{81,2,9999,9999},
			{81,1,9999,9999},
			{81,0,9999,9999},
			{81,-2,9999,9999},
			{81,-1,9999,9999},
			{81,-3,9999,9999},
			{81,-4,9999,9999},
			{80,-5,9999,9999},
			{76,-11,9999,9999},
			{76,-10,9999,9999},
			{73,-10,9999,9999},
			{74,-10,9999,9999},
			{75,-10,9999,9999},
			{71,-10,9999,9999},
			{72,-10,9999,9999},
			{67,-9,9999,9999},
			{67,-8,9999,9999},
			{66,-8,9999,9999},
			{66,-7,9999,9999},
			{66,-6,9999,9999},
			{66,-5,9999,9999},
			{66,-4,9999,9999},
			{66,-3,9999,9999},
			{54,7,9999,9999},
			{64,9,9999,9999},
			{65,10,9999,9999},
			{77,35,9999,9999},
			{76,35,9999,9999},
			{76,36,9999,9999},
			{77,36,9999,9999},
			{77,37,9999,9999},
			{78,37,9999,9999},
			{73,80,9999,9999},
			{73,81,9999,9999},
			{72,82,9999,9999},
			{72,83,9999,9999},
			{72,84,9999,9999},
			{71,85,9999,9999},
			{71,86,9999,9999},
			{70,87,9999,9999},
			{70,88,9999,9999},
			{48,104,9999,9999},
			{48,105,9999,9999},
			{47,105,9999,9999},
			{46,106,9999,9999},
			{45,106,9999,9999},
			{42,106,9999,9999},
			{43,106,9999,9999},
			{44,106,9999,9999},
			{35,107,9999,9999},
			{34,107,9999,9999},
			{30,107,9999,9999},
			{31,107,9999,9999},
			{32,107,9999,9999},
			{33,107,9999,9999},
			{29,107,9999,9999},
			{28,107,9999,9999},
			{26,106,9999,9999}
		};
		new OPTICS(data2);
	}

}
