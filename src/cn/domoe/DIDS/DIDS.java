package cn.domoe.DIDS;

import java.util.ArrayList;
import java.util.List;

public class DIDS {

	private Transaction[] Du = null;
	private double r = 0;
	private int MinPts = 0;
	
	private Item[] proFu = null;
	public DIDS(Transaction[] Du , double r , int MinPts) {
		this.Du = Du;
		this.r = r;
		this.MinPts = MinPts;
		print(Du);
		this.tenFoldCrossValidation();
		OPTICS opticsProFu = new OPTICS(this.Train,r,MinPts);
		proFu = opticsProFu.getResult();					//User Profile of User u
		print(proFu);
		OPTICS opticsRd = new OPTICS(this.Test,r,MinPts);
		Item[] rd = opticsRd.getResult();
		print(rd);
		
		for(int i =0;i<rd.length;i++) {
			double of = opticsRd.calOF(rd[i], rd, MinPts);
			if(of < 1) {
				System.out.println("Transaction ("+rd[i].t.x+","+rd[i].t.y+") Database Access is allowed");
				GHT.add(rd[i].t);
			}else {
				//EL
				ELList.add(rd[i]);
			}
		}
		if(ELList.size() > 0) {
			this.EL();
		}
		//打印所有可信赖的点
		GHT.print();
	}
	
	private List<Item> ELList = new ArrayList<>();
	private void EL() {
		new EL(ELList,proFu);
	}
	
	private void print(Transaction[] list) {
		System.out.println("RawData：");
		for(int i = 0;i<list.length;i++) {
			System.out.println(list[i].x);
		}
		System.out.println("------------------------");
		for(int i = 0;i<list.length;i++) {
			System.out.println(list[i].y);
		}
	}
	
	private void print(Item[] list) {
		System.out.println("打印结果队列：------------------------");

		for(int i = 0;i<list.length;i++) {
			System.out.println(list[i].t.x);
		}
		System.out.println("------------------------");
		for(int i = 0;i<list.length;i++) {
			System.out.println(list[i].t.y);
		}
		System.out.println("------------------------");
		for(int i = 0;i<list.length;i++) {
			System.out.println(list[i].rd);
		}
	}
	
	private Transaction[] Test = null;
	private Transaction[] Train = null;
	
	private void tenFoldCrossValidation() {
		this.Test = this.Du;
		this.Train = this.Du;
		
//		int testNum = this.Du.length ;
//		Test = new Transaction[testNum];
//		Train = new Transaction[this.Du.length - testNum];
//		int i = 0;
//		for(; i < testNum ; i++) {
//			Test[i] = this.Du[i];
//		}
//		for(int j = 0; j < Train.length;j++) {
//			Train[j] = this.Du[i++];
//		}
	}

	
	
	public static void main(String[] args) {
		int[][] data2 = new int[][] {
			//{8,31,9999,9999},{8,32,9999,9999},{8,33,9999,9999},{8,34,9999,9999},{8,35,9999,9999},{8,36,9999,9999},{8,37,9999,9999},{9,37,9999,9999},{10,37,9999,9999},{11,37,9999,9999},{11,36,9999,9999},{12,36,9999,9999},{12,35,9999,9999},{12,34,9999,9999},{12,33,9999,9999},{12,32,9999,9999},{12,31,9999,9999},{11,31,9999,9999},{10,31,9999,9999},{9,31,9999,9999},{9,32,9999,9999},{7,35,9999,9999},{7,36,9999,9999},{7,37,9999,9999},{7,38,9999,9999},{8,38,9999,9999},{9,38,9999,9999},{10,36,9999,9999},{10,35,9999,9999},{10,34,9999,9999},{10,33,9999,9999},{9,36,9999,9999},{9,35,9999,9999},{9,34,9999,9999},{9,33,9999,9999},{10,32,9999,9999},{11,34,9999,9999},{31,15,9999,9999},{30,15,9999,9999},{29,15,9999,9999},{28,15,9999,9999},{27,16,9999,9999},{27,17,9999,9999},{27,18,9999,9999},{28,19,9999,9999},{28,20,9999,9999},{29,20,9999,9999},{30,20,9999,9999},{31,20,9999,9999},{32,20,9999,9999},{33,20,9999,9999},{33,19,9999,9999},{33,18,9999,9999},{33,17,9999,9999},{33,16,9999,9999},{32,16,9999,9999},{32,15,9999,9999},{31,14,9999,9999},{30,14,9999,9999},{29,14,9999,9999},{28,14,9999,9999},{27,14,9999,9999},{27,15,9999,9999},{26,15,9999,9999},{26,16,9999,9999},{26,17,9999,9999},{26,18,9999,9999},{26,19,9999,9999},{26,20,9999,9999},{26,21,9999,9999},{27,21,9999,9999},{28,21,9999,9999},{29,21,9999,9999},{30,21,9999,9999},{31,21,9999,9999},{31,19,9999,9999},{32,19,9999,9999},{32,18,9999,9999},{32,17,9999,9999},{31,16,9999,9999},{28,16,9999,9999},{28,17,9999,9999},{28,18,9999,9999},{29,19,9999,9999},{30,19,9999,9999},{27,45,9999,9999},{28,45,9999,9999},{29,45,9999,9999},{30,45,9999,9999},{31,45,9999,9999},{32,45,9999,9999},{33,45,9999,9999},{34,45,9999,9999},{35,46,9999,9999},{36,46,9999,9999},{36,47,9999,9999},{37,48,9999,9999},{38,49,9999,9999},{38,50,9999,9999},{38,51,9999,9999},{39,51,9999,9999},{39,52,9999,9999},{39,53,9999,9999},{39,54,9999,9999},{39,55,9999,9999},{38,56,9999,9999},{37,57,9999,9999},{36,58,9999,9999},{35,58,9999,9999},{34,58,9999,9999},{33,58,9999,9999},{32,58,9999,9999},{31,58,9999,9999},{30,58,9999,9999},{29,58,9999,9999},{29,57,9999,9999},{28,55,9999,9999},{28,56,9999,9999},{28,54,9999,9999},{28,53,9999,9999},{28,52,9999,9999},{28,51,9999,9999},{28,50,9999,9999},{29,49,9999,9999},{29,48,9999,9999},{29,47,9999,9999},{30,46,9999,9999},{35,45,9999,9999},{36,45,9999,9999},{37,45,9999,9999},{38,46,9999,9999},{38,47,9999,9999},{39,47,9999,9999},{39,48,9999,9999},{39,49,9999,9999},{39,50,9999,9999},{38,53,9999,9999},{37,53,9999,9999},{35,53,9999,9999},{36,53,9999,9999},{33,53,9999,9999},{34,53,9999,9999},{32,53,9999,9999},{30,53,9999,9999},{31,53,9999,9999},{29,52,9999,9999},{27,51,9999,9999},{27,50,9999,9999},{27,49,9999,9999},{27,48,9999,9999},{28,48,9999,9999},{30,47,9999,9999},{31,47,9999,9999},{32,47,9999,9999},{33,48,9999,9999},{33,49,9999,9999},{34,49,9999,9999},{34,50,9999,9999},{34,51,9999,9999},{34,52,9999,9999},{34,54,9999,9999},{33,54,9999,9999},{33,55,9999,9999},{32,55,9999,9999},{32,54,9999,9999},{31,51,9999,9999},{31,52,9999,9999},{31,50,9999,9999},{32,49,9999,9999},{32,48,9999,9999},{33,47,9999,9999},{34,47,9999,9999},{34,48,9999,9999},{33,52,9999,9999},{29,53,9999,9999},{29,51,9999,9999},{29,50,9999,9999},{30,49,9999,9999},{31,48,9999,9999},{35,52,9999,9999},{35,54,9999,9999},{35,55,9999,9999},{35,56,9999,9999},{34,57,9999,9999},{33,56,9999,9999},{33,57,9999,9999},{32,52,9999,9999},{32,51,9999,9999},{33,51,9999,9999},{33,50,9999,9999},{35,50,9999,9999},{36,50,9999,9999},{37,50,9999,9999},{37,51,9999,9999},{37,52,9999,9999},{37,54,9999,9999},{37,55,9999,9999},{36,56,9999,9999},{32,57,9999,9999},{30,57,9999,9999},{31,57,9999,9999},{27,57,9999,9999},{28,57,9999,9999},{26,57,9999,9999},{25,57,9999,9999},{25,56,9999,9999},{25,54,9999,9999},{25,55,9999,9999},{25,53,9999,9999},{25,51,9999,9999},{25,52,9999,9999},{26,50,9999,9999},{26,49,9999,9999},{35,47,9999,9999},{37,47,9999,9999},{40,48,9999,9999},{40,49,9999,9999},{40,50,9999,9999},{40,51,9999,9999},{40,52,9999,9999},{40,53,9999,9999},{40,54,9999,9999},{40,55,9999,9999},{38,55,9999,9999},{36,55,9999,9999},{32,50,9999,9999},{35,48,9999,9999},{36,48,9999,9999},{36,49,9999,9999},{31,54,9999,9999},{30,54,9999,9999},{29,54,9999,9999},{12,37,9999,9999},{12,38,9999,9999},{13,39,9999,9999},{13,40,9999,9999},{14,41,9999,9999},{14,42,9999,9999},{15,42,9999,9999},{15,43,9999,9999},{16,44,9999,9999},{17,45,9999,9999},{18,46,9999,9999},{19,46,9999,9999},{19,47,9999,9999},{20,47,9999,9999},{21,47,9999,9999},{21,48,9999,9999},{22,48,9999,9999},{23,48,9999,9999},{23,49,9999,9999},{24,49,9999,9999},{25,49,9999,9999}
			//{18,35,9999,9999},{18,39,9999,9999},{17,38,9999,9999},{15,35,9999,9999},{17,37,9999,9999},{17,36,9999,9999},{15,32,9999,9999},{10,34,9999,9999},{11,33,9999,9999},{10,32,9999,9999},{9,33,9999,9999},
			{18,35,9999,9999},{18,38,9999,9999},{17,38,9999,9999},{15,35,9999,9999},{16,37,9999,9999},{17,36,9999,9999},{15,32,9999,9999},{10,34,9999,9999},{11,33,9999,9999},{10,32,9999,9999},{9,33,9999,9999},{12,36,9999,9999},{11,38,9999,9999},{14,38,9999,9999},{14,36,9999,9999},{13,32,9999,9999},{29,17,9999,9999},{27,19,9999,9999},{26,19,9999,9999},{31,22,9999,9999},{30,19,9999,9999},{27,21,9999,9999},{27,22,9999,9999},{28,21,9999,9999},{28,20,9999,9999},{29,24,9999,9999},{25,14,9999,9999},{24,14,9999,9999},{28,17,9999,9999},{26,18,9999,9999},{25,16,9999,9999},{28,14,9999,9999},{32,15,9999,9999},{32,16,9999,9999},{32,17,9999,9999},{32,19,9999,9999},{32,20,9999,9999},{31,16,9999,9999},{39,54,9999,9999},{34,51,9999,9999},{35,51,9999,9999},{36,50,9999,9999},{38,47,9999,9999},{39,47,9999,9999},{39,48,9999,9999},{39,49,9999,9999},{39,50,9999,9999},{39,51,9999,9999},{39,52,9999,9999},{39,53,9999,9999},{38,53,9999,9999},{37,53,9999,9999},{36,53,9999,9999},{36,52,9999,9999},{35,47,9999,9999},{32,48,9999,9999},{32,49,9999,9999},{32,50,9999,9999},{33,50,9999,9999},{33,51,9999,9999},{33,52,9999,9999},{32,53,9999,9999},{29,52,9999,9999},{29,51,9999,9999},{30,51,9999,9999},{36,47,9999,9999},{35,49,9999,9999},{29,44,9999,9999},{30,38,9999,9999},{25,32,9999,9999},{18,25,9999,9999},{18,24,9999,9999},{11,23,9999,9999}
		};
		Transaction[] dataset = new Transaction[data2.length];
		for(int i = 0;i<data2.length;i++) {
			dataset[i] = new Transaction(data2[i][0],data2[i][1]);
		}
//		Transaction[] dataset = new Transaction[] {
//			new Transaction(1,1),
//			new Transaction(2,2),
//			new Transaction(3,2),
//			new Transaction(4,2),
//			new Transaction(5,3),
//			new Transaction(6,4),
//			new Transaction(7,1),
//			new Transaction(8,3),
//			new Transaction(9,4),
//			new Transaction(2,3),
//		};
		new DIDS(dataset,5,4);
	}
}
